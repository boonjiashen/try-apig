AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS

  Sample SAM Template for AWS

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20
    Tracing: Active
  Api:
    # This removes the "Stage" stage automatically created
    # See https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-api.html#sam-resource-api-properties
    OpenApiVersion: 3.0.1
    TracingEnabled: true
    MethodSettings:
      - ResourcePath: /*
        HttpMethod: '*'  # Removing single quotes will throw "Error: Failed to parse template"
        MetricsEnabled: true
        DataTraceEnabled: true

Parameters:
  StageName:
    Default: Default
    Type: String
    Description: Stage name of APIs

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties: {}

  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  DynamoDbApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref StageName
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: config/ddb-api.yaml

  TableExporter:
    Type: AWS::Serverless::StateMachine
    Properties:
      Definition:
        Comment: |
          Exports a DynamoDB table to S3. Specifically, it calls DynamoDB:ExportTableToPointInTime
          and polls until the export reaches a terminal state, i.e., success or failure.

          Optional input
          ---

          {
            "Overrides": {
              "ClientToken": "<CLIENT_TOKEN>"
            }
          }

          Description
          ---

          ClientToken:
            For development purposes, you can override the client token of ExportTableToPointInTime to poll an ongoing
            export rather than initiate a new one. To get this value, go to a previous execution of this state machine,
            go to the step output of the `Export table` state, and copy the value of "ClientToken".
        StartAt: "Construct export RequestBody"
        States:
          Construct export RequestBody:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              FunctionName: !Ref MapMerger
              Payload:
                overridden:
                  ClientToken.$: "$$.Execution.Name"
                  TableArn: !GetAtt Table.Arn
                  S3Bucket: !Ref Bucket
                overrider.$: "$$.Execution.Input"
            Next: Export table
            ResultSelector:
              Tmp.$: "$.Payload"
            OutputPath: "$.Tmp"
          Export table:
            Parameters:
              ApiEndpoint: !Sub "${DynamoDbApi}.execute-api.${AWS::Region}.amazonaws.com"
              Stage: !Ref StageName
              AuthType: IAM_ROLE
              Method: POST
              RequestBody.$: "$"
            Resource: arn:aws:states:::apigateway:invoke
            Type: Task
            Next: Export failed, succeeded, or in progress?
            # Output is the value key'd on "ResponseBody" of result
            ResultSelector:
              Tmp.$: "$.ResponseBody"
            OutputPath: "$.Tmp"
          Export failed, succeeded, or in progress?:
            Type: Choice
            Choices:
              - And:
                  - Variable: "$.ExportDescription.ExportStatus"
                    IsPresent: true
                  - Variable: "$.ExportDescription.ExportStatus"
                    StringEquals: COMPLETED
                Next: Export succeeded
              - And:
                  - Variable: "$.ExportDescription.ExportStatus"
                    IsPresent: true
                  - Variable: "$.ExportDescription.ExportStatus"
                    StringEquals: IN_PROGRESS
                Next: Export in progress
            Default: Export failed
          Export failed:
            Type: Pass
            Next: Fail
          Fail:
            Type: Fail
          Export succeeded:
            Type: Pass
            End: true
          Export in progress:
            Type: Pass
            Next: Wait before polling again
            # Clear output since next states need no input
            Result: {}
            ResultPath: $
          Wait before polling again:
            Type: Wait
            Seconds: 30
            Next: "Construct export RequestBody"
      Policies:
        - arn:aws:iam::aws:policy/AdministratorAccess

  DynamoDbApiRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: my-stage
      # Running AWS::Include in DefinitionBody rather than using DefinitionUri
      # because DefinitionUri doesn't support !Sub
      # See https://github.com/awslabs/serverless-application-model/issues/305#issuecomment-562653339
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: config/apidefinition.yaml

  MapMerger:
    Type: AWS::Serverless::Function
    Properties:
      Description: |
        Merges two simple maps, e.g.,
        {
          "overrider": {
            "b": "I win",
            "c": "I win too",
            "d": 1
          },
          "overridden": {
            "a": 2,
            "b": "I lose",
            "c": "I lose too",
          }
        }
        ...returns:
        {
          "a": 2,
          "b": "I win",
          "c": "I win too",
          "d": 1
        }
      Runtime: python3.9
      Handler: index.handler
      InlineCode: |
        handler = lambda event, _: event['overridden'] | event['overrider']

  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: HelloWorldFunction
      Handler: helloworld.App::handleRequest
      Runtime: java8
      MemorySize: 512
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
      Events:
        # To create AWS::Lambda::Permission that allows APIG to call this function
        # Otherwise runtime throws "Invalid permissions on Lambda function"
        HelloWorld:
          Type: Api
          Properties:
            # TODO: deduplicate path
            Path: /hello-world
            Method: get
            RestApiId: !Ref Api